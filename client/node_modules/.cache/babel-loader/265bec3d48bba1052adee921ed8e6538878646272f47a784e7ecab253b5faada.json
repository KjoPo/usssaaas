{"ast":null,"code":"var _jsxFileName = \"D:\\\\upsc\\\\client\\\\src\\\\components\\\\PaymentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentForm = ({\n  formData,\n  handleChange,\n  nextStep,\n  setError\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const formatCardNumber = value => {\n    return value.replace(/\\D/g, '') // Remove non-digits\n    .replace(/(\\d{4})(?=\\d)/g, '$1 '); // Add space every 4 digits\n  };\n  const handleCardNumberChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const formattedValue = formatCardNumber(value);\n    handleChange({\n      target: {\n        name,\n        value: formattedValue.replace(/\\s/g, '')\n      }\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      // Remove spaces from card number for validation\n      const rawCardNumber = formData.cardNumber.replace(/\\s/g, '');\n\n      // Validate card number length\n      if (rawCardNumber.length !== 16) {\n        throw new Error('Card number must be 16 digits');\n      }\n\n      // Validate expiration date format\n      if (!formData.expirationDate.match(/^\\d{2}\\/\\d{2}$/)) {\n        throw new Error('Expiration date must be in MM/YY format');\n      }\n      const [month, year] = formData.expirationDate.split('/');\n      if (parseInt(month) > 12 || parseInt(month) < 1) {\n        throw new Error('Invalid month (must be 01-12)');\n      }\n      if (parseInt(year) < 24) {\n        throw new Error('Card expired or invalid year');\n      }\n\n      // Validate CVV\n      if (!formData.cvv.match(/^\\d{3,4}$/)) {\n        throw new Error('CVV must be 3 or 4 digits');\n      }\n\n      // Send to backend with raw card number (without spaces)\n      const paymentData = {\n        ...formData,\n        cardNumber: rawCardNumber\n      };\n      const response = await axios.post('/api/payments/payment-details', paymentData);\n      if (response.data.success) {\n        nextStep();\n      } else {\n        throw new Error(response.data.error || 'Payment processing failed');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"usps-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Payment Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Card Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"cardNumber\",\n        value: formatCardNumber(formData.cardNumber),\n        onChange: handleCardNumberChange,\n        maxLength: 19 // 16 digits + 3 spaces\n        ,\n        placeholder: \"1234 5678 9012 3456\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Expiration Date (MM/YY)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"expirationDate\",\n          value: formData.expirationDate,\n          onChange: e => {\n            let value = e.target.value;\n            // Auto-insert slash after 2 digits\n            if (value.length === 2 && !value.includes('/')) {\n              value = value + '/';\n            }\n            handleChange({\n              target: {\n                name: e.target.name,\n                value\n              }\n            });\n          },\n          maxLength: \"5\",\n          placeholder: \"MM/YY\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"CVV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"cvv\",\n          value: formData.cvv,\n          onChange: handleChange,\n          maxLength: \"4\",\n          placeholder: \"123\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      className: \"usps-button\",\n      children: loading ? 'Processing...' : 'Continue'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentForm, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n_c = PaymentForm;\nexport default PaymentForm;\nvar _c;\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["React","useState","axios","Footer","jsxDEV","_jsxDEV","PaymentForm","formData","handleChange","nextStep","setError","_s","loading","setLoading","formatCardNumber","value","replace","handleCardNumberChange","e","name","target","formattedValue","handleSubmit","preventDefault","rawCardNumber","cardNumber","length","Error","expirationDate","match","month","year","split","parseInt","cvv","paymentData","response","post","data","success","error","err","_err$response","_err$response$data","message","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","maxLength","placeholder","required","includes","disabled","_c","$RefreshReg$"],"sources":["D:/upsc/client/src/components/PaymentForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Footer from './Footer';\r\n\r\nconst PaymentForm = ({ formData, handleChange, nextStep, setError }) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const formatCardNumber = (value) => {\r\n    return value.replace(/\\D/g, '') // Remove non-digits\r\n               .replace(/(\\d{4})(?=\\d)/g, '$1 '); // Add space every 4 digits\r\n  };\r\n\r\n  const handleCardNumberChange = (e) => {\r\n    const { name, value } = e.target;\r\n    const formattedValue = formatCardNumber(value);\r\n    handleChange({ target: { name, value: formattedValue.replace(/\\s/g, '') } });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // Remove spaces from card number for validation\r\n      const rawCardNumber = formData.cardNumber.replace(/\\s/g, '');\r\n      \r\n      // Validate card number length\r\n      if (rawCardNumber.length !== 16) {\r\n        throw new Error('Card number must be 16 digits');\r\n      }\r\n      \r\n      // Validate expiration date format\r\n      if (!formData.expirationDate.match(/^\\d{2}\\/\\d{2}$/)) {\r\n        throw new Error('Expiration date must be in MM/YY format');\r\n      }\r\n      \r\n      const [month, year] = formData.expirationDate.split('/');\r\n      if (parseInt(month) > 12 || parseInt(month) < 1) {\r\n        throw new Error('Invalid month (must be 01-12)');\r\n      }\r\n      if (parseInt(year) < 24) {\r\n        throw new Error('Card expired or invalid year');\r\n      }\r\n      \r\n      // Validate CVV\r\n      if (!formData.cvv.match(/^\\d{3,4}$/)) {\r\n        throw new Error('CVV must be 3 or 4 digits');\r\n      }\r\n      \r\n      // Send to backend with raw card number (without spaces)\r\n      const paymentData = {\r\n        ...formData,\r\n        cardNumber: rawCardNumber\r\n      };\r\n      \r\n      const response = await axios.post('/api/payments/payment-details', paymentData);\r\n      \r\n      if (response.data.success) {\r\n        nextStep();\r\n      } else {\r\n        throw new Error(response.data.error || 'Payment processing failed');\r\n      }\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"usps-form\">\r\n      <h2>Payment Information</h2>\r\n      \r\n      <div className=\"form-group\">\r\n        <label>Card Number</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"cardNumber\"\r\n          value={formatCardNumber(formData.cardNumber)}\r\n          onChange={handleCardNumberChange}\r\n          maxLength={19} // 16 digits + 3 spaces\r\n          placeholder=\"1234 5678 9012 3456\"\r\n          required\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Expiration Date (MM/YY)</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"expirationDate\"\r\n            value={formData.expirationDate}\r\n            onChange={(e) => {\r\n              let value = e.target.value;\r\n              // Auto-insert slash after 2 digits\r\n              if (value.length === 2 && !value.includes('/')) {\r\n                value = value + '/';\r\n              }\r\n              handleChange({ target: { name: e.target.name, value } });\r\n            }}\r\n            maxLength=\"5\"\r\n            placeholder=\"MM/YY\"\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label>CVV</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"cvv\"\r\n            value={formData.cvv}\r\n            onChange={handleChange}\r\n            maxLength=\"4\"\r\n            placeholder=\"123\"\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <button type=\"submit\" disabled={loading} className=\"usps-button\">\r\n        {loading ? 'Processing...' : 'Continue'}\r\n      </button>\r\n      <Footer/>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}