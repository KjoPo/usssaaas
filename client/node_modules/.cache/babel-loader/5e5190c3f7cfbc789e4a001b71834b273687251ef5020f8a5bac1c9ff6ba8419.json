{"ast":null,"code":"var _jsxFileName = \"D:\\\\upsc\\\\client\\\\src\\\\components\\\\ProgressBar.js\";\nimport React from 'react';\nimport './ProgressBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  currentStep\n}) => {\n  const steps = [{\n    id: 'address',\n    label: 'Verify Address'\n  }, {\n    id: 'payment',\n    label: 'Payment Information'\n  }, {\n    id: 'otp',\n    label: 'OTP Verification'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-container\",\n    children: steps.map((step, index) => {\n      const isCompleted = steps.findIndex(s => s.id === currentStep) > index;\n      const isActive = step.id === currentStep;\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `step-circle ${isCompleted ? 'completed' : ''} ${isActive ? 'active' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step-label\",\n            children: step.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), index < steps.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `progress-connector ${isCompleted ? 'completed' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)]\n      }, step.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProgressBar","currentStep","steps","id","label","className","children","map","step","index","isCompleted","findIndex","s","isActive","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["D:/upsc/client/src/components/ProgressBar.js"],"sourcesContent":["import React from 'react';\r\nimport './ProgressBar.css';\r\n\r\nconst ProgressBar = ({ currentStep }) => {\r\n  const steps = [\r\n    { id: 'address', label: 'Verify Address' },\r\n    { id: 'payment', label: 'Payment Information' },\r\n    { id: 'otp', label: 'OTP Verification' }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"progress-container\">\r\n      {steps.map((step, index) => {\r\n        const isCompleted = steps.findIndex(s => s.id === currentStep) > index;\r\n        const isActive = step.id === currentStep;\r\n        \r\n        return (\r\n          <React.Fragment key={step.id}>\r\n            <div className=\"progress-step\">\r\n              <div className={`step-circle ${isCompleted ? 'completed' : ''} ${isActive ? 'active' : ''}`}>\r\n                <span>{index + 1}</span>\r\n              </div>\r\n              <div className=\"step-label\">{step.label}</div>\r\n            </div>\r\n            \r\n            {index < steps.length - 1 && (\r\n              <div className={`progress-connector ${isCompleted ? 'completed' : ''}`}></div>\r\n            )}\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EACvC,MAAMC,KAAK,GAAG,CACZ;IAAEC,EAAE,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAiB,CAAC,EAC1C;IAAED,EAAE,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAsB,CAAC,EAC/C;IAAED,EAAE,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAmB,CAAC,CACzC;EAED,oBACEL,OAAA;IAAKM,SAAS,EAAC,oBAAoB;IAAAC,QAAA,EAChCJ,KAAK,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC1B,MAAMC,WAAW,GAAGR,KAAK,CAACS,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACT,EAAE,KAAKF,WAAW,CAAC,GAAGQ,KAAK;MACtE,MAAMI,QAAQ,GAAGL,IAAI,CAACL,EAAE,KAAKF,WAAW;MAExC,oBACEF,OAAA,CAACF,KAAK,CAACiB,QAAQ;QAAAR,QAAA,gBACbP,OAAA;UAAKM,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BP,OAAA;YAAKM,SAAS,EAAE,eAAeK,WAAW,GAAG,WAAW,GAAG,EAAE,IAAIG,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;YAAAP,QAAA,eAC1FP,OAAA;cAAAO,QAAA,EAAOG,KAAK,GAAG;YAAC;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CAAC,eACNnB,OAAA;YAAKM,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEE,IAAI,CAACJ;UAAK;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC,EAELT,KAAK,GAAGP,KAAK,CAACiB,MAAM,GAAG,CAAC,iBACvBpB,OAAA;UAAKM,SAAS,EAAE,sBAAsBK,WAAW,GAAG,WAAW,GAAG,EAAE;QAAG;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAC9E;MAAA,GAVkBV,IAAI,CAACL,EAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWZ,CAAC;IAErB,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACE,EAAA,GA9BIpB,WAAW;AAgCjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}